bootstrap (reboot): https://getbootstrap.com/docs/5.1/content/reboot/

  rem = default bootstrap measurement

  bootstrap ignore smaller margins, so avoid margin-top

  box-sizing: border-box .. as default



spacing

  padding
    p{dir}-{amt}
      dir=direction
        t=top
        e/r=end/right
        b=bottom
        s/l=start/left
        x = each side horizontally
        y = each side vertically
      amt=amount (0-5)
  margin
    m{dir}-{amt}
        dir=direction
        t=top
        e/r=end/right
        b=bottom
        s/l=start/left
        x = each side horizontally
        y = each side vertically
      amt=amount (0-5, auto)
  gap (applicable inside d-grid)
    gap-{amt}
      amt=amount (0-5)

display
  d-{val}
    val=none,inline,inline-block,block,grid,table,table-cell,table-row,flex,inline-flex

display with breakpoint
  d-{br}-{val}
    br=breakpoint; none, sm, md, lg, xl, xxl

visiblity
  visible/invisible.. using "invisible" class.. but will still take up space

contextual printing
  d-print-{val}
    val=none,inline.inline-block,block,grid,table,table-cell,table-row,flex,inline-flex

position
  position-{val}
    val=static,relative,absolute,fixed,sticky

arrangement
  {pro}{pos}
    pro=top,start,bottom,end
    pos=0,50,100
    translate-middle

font sizes
  h1,h2,h3,h4,h5,h6
  fs-1,fs-2,fs-3,fs-4,fs-5,fs-6
  display-1,display-2,display-3,display-4,display-5,display-6
  lead

weight/styles
  fw-{wgt}.. can override fonts
    wgt=lighter,light,normal,bold, bolder... normal is a reset class

  fst-{stl}
    stl=italic,normal

line height = space between text
  lh-{hgt}
    hgt=1,sm,base,lg

text alignment
  text{-br}-{typ}
    br (optional) = sm,md,lg,xl
    typ=start,center,end

text decoration
  text-decoration-{typ}
    typ=underline,line-through,none

text wrapping/breaking
  text-{typ}
    typ=wrap,nowrap,break

text transform
  text-{typ}
    typ=lowercase,uppercase,capitalize

vertical alignment (align elements on same line)
  align-{typ}
    typ=baseline,top,middle,bottom,text-top,text-bottom

misc
  rtl = right to left.. need rtl version of bootstrap
    <html lang="ar" dir="rtl">

  font-monospace = font like typwriter font
  text-reset = reset text and pick color of parent

blockquotes
  blockquote, blockquote-footer, figure

basic lists
  list-{typ}
    typ =unstyled,inline,inline-item

list groups
  list-group, list-group-item
  modifiers (each pair needs to exist):
    active aria-current="true"
    disabled tabindex="-1" aria-disabled="true"

flush list groups (borders are removed)
  list-group-flush

actionable items (if you want people to click on those group items)
  list-group-item-action

horizontal list groups
  list-group-horizontal{-br}
    br=sm,md,lg,xl,xxl

list group contextual colors (change colors of list groups)
  list-group-item{-col}
    col=primary, secondary, success, danger, warning, info, light, dark

table & contextual
  table
  table{-typ} (contextual)
    typ=primary,secondary,success,danger,warning,info,light,dark

table rows & cells
  table-active
  table{-typ} (contextual)
    typ=primary,secondary,success,danger,warning,info,light,dark

table style modifiers
  table{-typ}
    typ=striped,hover,sm

table borders
  table-bordered, table-borderless
  table{-typ} (contextual)
    typ=primary,secondary,success,danger,warning,info,light,dark

responsive tables
  table-responsive{-typ}
    typ=sm,md,lg,xl,xxl

table vertical alignment
  align-{typ}
    typ=baseline,top,middle,bottom,text-top,text-bottom

images
  img-fluid, img-thumbnail

image floats (not actually used, because of flexbox)
  float-start, float-end
  clearfix

image figures
  figure, figure-img, figure-caption

borders
  border
  border{-sid} (additive)
    sid=top,end,bottom,start
  border{-sid}-0 (subtractive)
    sid=top,end,bottom,start

contextual borders
  border-{col}
    col=primary,secondary,success,danger,warning,info,light,dark,white

border width
  border-{unm}
    num=1,2,3,4,5

border radius
  rounded{-typ}
    typ:
      (side) top,end,bottom,start
      (shape) circle, pill

border radius sizes
  rounded-{num}
    num=0,1,2,3

border shadows
  shadow{-siz}
    siz=none,sm,lg

width
  w-{typ} typ = % based
    typ=25,50,75,100,auto,mw-100,vw-100
    mw-100 (maximum width only 100)
    vw-100 (viewport width 100%)

height
  h-{typ} typ = % based
    typ=25,50,75,100,auto,mh-100,vh-100
    mh-100 (maximum height only 100)
    vh-100 (viewport height 100%)

aspect ratio (ideal for video embeds)
  ratio ratio-{val}
    val=1x1,4x3,16x9,21x9

overflow (what happens if element overflows it's content)
  overflow-{typ}
    typ=auto,hidden,visible,scroll

stretched link (make everything clickable within the parent container)
  stretched-link

user select (applicable on texts)
  user-select-{typ}
    typ=auto,all,none

pointer events (can't interact with elements, paired with: aria-disabled="true" tabindex="-1")
  pe-{typ}
    typ=none,auto


grid system
  container
  rows
  columns
  flexbox/css grid

container>row>col

row gutters (space between col on each row)
  g{-dir}-{siz}
    dir=x,y
    siz=0,1,2,3,4,5

row columns (useful in making a grid of images)
  row-cols-{siz}
    siz=1,2,3,4,5

    example: row-cols-1 = only allow 1 column

columns
  - align to grid containing 12 col grid
  - can be used standalone
  - use on content (content>col)

  column options (for responsiveness)
    col{-br}-{siz}
      br=sm,md,lg,xl,xxl
      siz=1,2,3,4,5,6,7,8,9,10,11,12
          example: col-sm-2 (take 2 units at sm breakpoint)
                   col-md-4 (take 4 units at md breakpoint)

reordering columns
  order{-br}-{ord}
    br=sm,md,lg,xl,xxl
    ord=1,2,3,4,5

offsetting columns (so col don't appear where they should normally)
  offset{-br}-{pos}
    br=sm,md,lg,xl,xxl
    pos=1,2,3,4,5,6,7,8,9,10,11

  better to use flexbox in centering things


flexbox
  d{-br}{-inline}-flex
    br=sm,md,lg,xl,xxl

some flexbox classes can be used on non flexbox parent

flexbox direction
  flex{-br}{-typ}{-reverse}
    br=sm,md,lg,xl,xxl
    typ=row,column

flexbox justify content (for alignment, can be used on non flexbox)
  justify-content{-br}-{typ}
    br=sm,md,lg,xl,xxl
    typ=start,end,center,between,around,evenly

flexbox alignment (for alignment, can be used on non flexbox)
  align-items{-br}-{typ}
    br=sm,md,lg,xl,xxl
    typ=start,end,center,baseline,stretch

flexbox vertical alignment (for alignment, can be used on non flexbox)
  align-items{-br}-{typ}
    br=sm,md,lg,xl,xxl
    typ=start,end,center,baseline,stretch

flexbox align self (align individual items inside flex container)
  align-self{-br}-{typ}
    br=sm,md,lg,xl,xxl
    typ=start,end,center,baseline,stretch

flexbox flex fill (fill available horizontal space)
  flex{-br}-fill
    br=sm,md,lg,xl,xxl

flexbox flex grow/shrink (similar to flex fill, but ability to toggle)
  flex{-br}{-typ}{-bool}
    br=sm,md,lg,xl,xxl
    typ=grow,shrink
    bool=0,1

flexbox flex wrap
  flex{-br}{-typ}{-reverse}
    br=sm,md,lg,xl,xxl
    typ=wrap,nowrap

flexbox order
  order{-br}{-amt}
    br=sm,md,lg,xl,xxl
    amt=first,0,1,2,3,4,5,last

flexbox align content (vertically)
  align-content{-br}{-typ}
    br=sm,md,lg,xl,xxl
    typ=start,end,center,between,around,stretch


buttons
  'btn' basic class
  can be applied to: <button> <a> <input>
  role="button" on <a> (for assistive devices)
  type="button" on <input> or <button>

contextual buttons
  btn{-outline}{-typ}
  typ=primary,secondary,success,danger,warning,info,light,dark,link

button sizes
  btn-sm, btn-lg

button groups
  default
    btn-group, btn-group-vertical
  variation
    btn-group-sm, btn-group-lg
  checkboxes/radio (click a button to behave like a checkbox)
    btn-check

nav
  used with list, nolists or nav tag
  special assistive tags needed
  aligns with flexbox

  nav, nav-item, nav-link

nav styles
  nav-tabs, nav-pills

nav alignment
  nav-fill, nav-justified


navbar
  nav class="navbar"
    bg-{col}
      col=primary,secondary, success,danger,warning,info,light,dark,white
    navbar-{col}
      col=light,dark
    navbar-expand-{br}
      br=sm,md,lg,xl,xxl

  inside navbar
    container{-br}
      br=sm,md,lg,xl,xxl,fluid
    navbar-nav (where all links go)
      nav-item, nav-link

  navbar-brand (branding)
  nav-text (text)

  navbar collapse (hamburger menu)
    navbar-toggler (wrapper around navbar)
    navbar-toggler-icon
    collapse, navbar-collapse, id, navbar-nav-scroll


cards
  card
    card-header, card-footer, card-body, card-img
  card-body
    card-title, card-subtitle, card-text, card-link

card images
  card-img{-typ}
    typ=top,bottom,overlay

card layouts
  card-group

pagination
  nav>ul.pagination>li.page-item>a.page-link
  pagination
  pagination-{siz}
    siz=sm,lg
  page-{typ}
    typ=item,link

progress bar
  progress
  progress-bar{-typ}
  typ=striped,animated

spinner
  spinner-border, spinner-grow

badges
  badge
  rounded-pill

breadcrumb
  breadcrumb
  breadcrumb-item
  --bs-breadcrumb-divider

carousel
  carousel
    data-bs-ride, slide, carousel-fade
  carousel-inner
    carousel-item
  class="d-block w-100" active (required so images work properly)

carousel button controls
  carousel-control-{typ}
    typ=prev,next
    data-bs-target="id", data-bs-slide="{prev|next}"

carousel indicator controls
  carousel-indicators
  options: data-bs-target="id, data-bs-slide-to="#", aria-label="Label"
  current: class="active" aria-current="true"

carousel options
  carousel-caption
  carousel-dark

carousel interactivity
  data-bs-{typ}
    typ=ride (bool = activate when interacted | carousel = autoplay)
        interval (ms = default 5000, 5sec | fade)
        pause (hover) = stop cycling when someone is hovering
        wrap (go to first image after last)
        keyboard (allow keyboard control)
        touch (touch events)